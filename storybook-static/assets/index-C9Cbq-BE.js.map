{"version":3,"file":"index-C9Cbq-BE.js","sources":["../../node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs","../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs","../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","../../node_modules/@radix-ui/react-arrow/dist/index.mjs","../../node_modules/@radix-ui/react-popper/dist/index.mjs"],"sourcesContent":["// packages/react/use-escape-keydown/src/useEscapeKeydown.tsx\nimport * as React from \"react\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nfunction useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n  React.useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener(\"keydown\", handleKeyDown, { capture: true });\n    return () => ownerDocument.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\n  }, [onEscapeKeyDown, ownerDocument]);\n}\nexport {\n  useEscapeKeydown\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/dismissable-layer/src/DismissableLayer.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive, dispatchDiscreteCustomEvent } from \"@radix-ui/react-primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useEscapeKeydown } from \"@radix-ui/react-use-escape-keydown\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DISMISSABLE_LAYER_NAME = \"DismissableLayer\";\nvar CONTEXT_UPDATE = \"dismissableLayer.update\";\nvar POINTER_DOWN_OUTSIDE = \"dismissableLayer.pointerDownOutside\";\nvar FOCUS_OUTSIDE = \"dismissableLayer.focusOutside\";\nvar originalBodyPointerEvents;\nvar DismissableLayerContext = React.createContext({\n  layers: /* @__PURE__ */ new Set(),\n  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),\n  branches: /* @__PURE__ */ new Set()\n});\nvar DismissableLayer = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node2) => setNode(node2));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1);\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = \"none\";\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        ...layerProps,\n        ref: composedRefs,\n        style: {\n          pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? \"auto\" : \"none\" : void 0,\n          ...props.style\n        },\n        onFocusCapture: composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture),\n        onBlurCapture: composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture),\n        onPointerDownCapture: composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )\n      }\n    );\n  }\n);\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\nvar BRANCH_NAME = \"DismissableLayerBranch\";\nvar DismissableLayerBranch = React.forwardRef((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n  return /* @__PURE__ */ jsx(Primitive.div, { ...props, ref: composedRefs });\n});\nDismissableLayerBranch.displayName = BRANCH_NAME;\nfunction usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis?.document) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside);\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {\n  });\n  React.useEffect(() => {\n    const handlePointerDown = (event) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        let handleAndDispatchPointerDownOutsideEvent2 = function() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        };\n        var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;\n        const eventDetail = { originalEvent: event };\n        if (event.pointerType === \"touch\") {\n          ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;\n          ownerDocument.addEventListener(\"click\", handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent2();\n        }\n      } else {\n        ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener(\"pointerdown\", handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener(\"pointerdown\", handlePointerDown);\n      ownerDocument.removeEventListener(\"click\", handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true\n  };\n}\nfunction useFocusOutside(onFocusOutside, ownerDocument = globalThis?.document) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside);\n  const isFocusInsideReactTreeRef = React.useRef(false);\n  React.useEffect(() => {\n    const handleFocus = (event) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false\n        });\n      }\n    };\n    ownerDocument.addEventListener(\"focusin\", handleFocus);\n    return () => ownerDocument.removeEventListener(\"focusin\", handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n  return {\n    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,\n    onBlurCapture: () => isFocusInsideReactTreeRef.current = false\n  };\n}\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\nfunction handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler, { once: true });\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\nvar Root = DismissableLayer;\nvar Branch = DismissableLayerBranch;\nexport {\n  Branch,\n  DismissableLayer,\n  DismissableLayerBranch,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","// packages/react/arrow/src/Arrow.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Arrow\";\nvar Arrow = React.forwardRef((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return /* @__PURE__ */ jsx(\n    Primitive.svg,\n    {\n      ...arrowProps,\n      ref: forwardedRef,\n      width,\n      height,\n      viewBox: \"0 0 30 10\",\n      preserveAspectRatio: \"none\",\n      children: props.asChild ? children : /* @__PURE__ */ jsx(\"polygon\", { points: \"0,0 30,0 15,10\" })\n    }\n  );\n});\nArrow.displayName = NAME;\nvar Root = Arrow;\nexport {\n  Arrow,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/popper/src/Popper.tsx\nimport * as React from \"react\";\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size\n} from \"@floating-ui/react-dom\";\nimport * as ArrowPrimitive from \"@radix-ui/react-arrow\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SIDE_OPTIONS = [\"top\", \"right\", \"bottom\", \"left\"];\nvar ALIGN_OPTIONS = [\"start\", \"center\", \"end\"];\nvar POPPER_NAME = \"Popper\";\nvar [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\nvar [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);\nvar Popper = (props) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState(null);\n  return /* @__PURE__ */ jsx(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });\n};\nPopper.displayName = POPPER_NAME;\nvar ANCHOR_NAME = \"PopperAnchor\";\nvar PopperAnchor = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    React.useEffect(() => {\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n    return virtualRef ? null : /* @__PURE__ */ jsx(Primitive.div, { ...anchorProps, ref: composedRefs });\n  }\n);\nPopperAnchor.displayName = ANCHOR_NAME;\nvar CONTENT_NAME = \"PopperContent\";\nvar [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);\nvar PopperContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = \"bottom\",\n      sideOffset = 0,\n      align = \"center\",\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = \"partial\",\n      hideWhenDetached = false,\n      updatePositionStrategy = \"optimized\",\n      onPlaced,\n      ...contentProps\n    } = props;\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [content, setContent] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [arrow, setArrow] = React.useState(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n    const desiredPlacement = side + (align !== \"center\" ? \"-\" + align : \"\");\n    const collisionPadding = typeof collisionPaddingProp === \"number\" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries\n    };\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: \"fixed\",\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === \"always\"\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions && shift({\n          mainAxis: true,\n          crossAxis: false,\n          limiter: sticky === \"partial\" ? limitShift() : void 0,\n          ...detectOverflowOptions\n        }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty(\"--radix-popper-available-width\", `${availableWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-available-height\", `${availableHeight}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-width\", `${anchorWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-height\", `${anchorHeight}px`);\n          }\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: \"referenceHidden\", ...detectOverflowOptions })\n      ]\n    });\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const [contentZIndex, setContentZIndex] = React.useState();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        ref: refs.setFloating,\n        \"data-radix-popper-content-wrapper\": \"\",\n        style: {\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : \"translate(0, -200%)\",\n          // keep off the page when measuring\n          minWidth: \"max-content\",\n          zIndex: contentZIndex,\n          [\"--radix-popper-transform-origin\"]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y\n          ].join(\" \"),\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...middlewareData.hide?.referenceHidden && {\n            visibility: \"hidden\",\n            pointerEvents: \"none\"\n          }\n        },\n        dir: props.dir,\n        children: /* @__PURE__ */ jsx(\n          PopperContentProvider,\n          {\n            scope: __scopePopper,\n            placedSide,\n            onArrowChange: setArrow,\n            arrowX,\n            arrowY,\n            shouldHideArrow: cannotCenterArrow,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                \"data-side\": placedSide,\n                \"data-align\": placedAlign,\n                ...contentProps,\n                ref: composedRefs,\n                style: {\n                  ...contentProps.style,\n                  // if the PopperContent hasn't been placed yet (not all measurements done)\n                  // we prevent animations so that users's animation don't kick in too early referring wrong sides\n                  animation: !isPositioned ? \"none\" : void 0\n                }\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nPopperContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"PopperArrow\";\nvar OPPOSITE_SIDE = {\n  top: \"bottom\",\n  right: \"left\",\n  bottom: \"top\",\n  left: \"right\"\n};\nvar PopperArrow = React.forwardRef(function PopperArrow2(props, forwardedRef) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    /* @__PURE__ */ jsx(\n      \"span\",\n      {\n        ref: contentContext.onArrowChange,\n        style: {\n          position: \"absolute\",\n          left: contentContext.arrowX,\n          top: contentContext.arrowY,\n          [baseSide]: 0,\n          transformOrigin: {\n            top: \"\",\n            right: \"0 0\",\n            bottom: \"center 0\",\n            left: \"100% 0\"\n          }[contentContext.placedSide],\n          transform: {\n            top: \"translateY(100%)\",\n            right: \"translateY(50%) rotate(90deg) translateX(-50%)\",\n            bottom: `rotate(180deg)`,\n            left: \"translateY(50%) rotate(-90deg) translateX(50%)\"\n          }[contentContext.placedSide],\n          visibility: contentContext.shouldHideArrow ? \"hidden\" : void 0\n        },\n        children: /* @__PURE__ */ jsx(\n          ArrowPrimitive.Root,\n          {\n            ...arrowProps,\n            ref: forwardedRef,\n            style: {\n              ...arrowProps.style,\n              // ensures the element can be measured correctly (mostly for if SVG)\n              display: \"block\"\n            }\n          }\n        )\n      }\n    )\n  );\n});\nPopperArrow.displayName = ARROW_NAME;\nfunction isNotNull(value) {\n  return value !== null;\n}\nvar transformOrigin = (options) => ({\n  name: \"transformOrigin\",\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: \"0%\", center: \"50%\", end: \"100%\" }[placedAlign];\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n    let x = \"\";\n    let y = \"\";\n    if (placedSide === \"bottom\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === \"top\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === \"right\") {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === \"left\") {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  }\n});\nfunction getSideAndAlignFromPlacement(placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return [side, align];\n}\nvar Root2 = Popper;\nvar Anchor = PopperAnchor;\nvar Content = PopperContent;\nvar Arrow = PopperArrow;\nexport {\n  ALIGN_OPTIONS,\n  Anchor,\n  Arrow,\n  Content,\n  Popper,\n  PopperAnchor,\n  PopperArrow,\n  PopperContent,\n  Root2 as Root,\n  SIDE_OPTIONS,\n  createPopperScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["useEscapeKeydown","onEscapeKeyDownProp","ownerDocument","onEscapeKeyDown","useCallbackRef","React.useEffect","handleKeyDown","event","DISMISSABLE_LAYER_NAME","CONTEXT_UPDATE","POINTER_DOWN_OUTSIDE","FOCUS_OUTSIDE","originalBodyPointerEvents","DismissableLayerContext","React.createContext","DismissableLayer","React.forwardRef","props","forwardedRef","disableOutsidePointerEvents","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","context","React.useContext","node","setNode","React.useState","force","composedRefs","useComposedRefs","node2","layers","highestLayerWithOutsidePointerEventsDisabled","highestLayerWithOutsidePointerEventsDisabledIndex","index","isBodyPointerEventsDisabled","isPointerEventsEnabled","pointerDownOutside","usePointerDownOutside","target","isPointerDownOnBranch","branch","focusOutside","useFocusOutside","dispatchUpdate","handleUpdate","jsx","Primitive","composeEventHandlers","BRANCH_NAME","DismissableLayerBranch","ref","React.useRef","handlePointerDownOutside","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","handleAndDispatchPointerDownOutsideEvent2","handleAndDispatchCustomEvent","eventDetail","timerId","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","name","handler","detail","discrete","dispatchDiscreteCustomEvent","sides","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","clamp","start","value","end","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","x","y","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","statefulPlacement","middlewareData","resetCount","i","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","initialSideAxis","isBasePlacement","fallbackPlacements","hasFallbackAxisSideDirection","placements","overflow","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","d","a","b","_overflowsData$filter2","currentSideAxis","acc","getSideOffsets","isAnySideFullyClipped","hide","offsets","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","_state$middlewareData","_state$middlewareData2","apply","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hasWindow","getNodeName","isNode","getWindow","_node$ownerDocument","getDocumentElement","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","isTableElement","isTopLayer","selector","isContainingBlock","elementOrCss","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","getBoundingClientRect","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","left","top","getWindowScrollBarX","leftScroll","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","convertOffsetParentRelativeRectToViewportRelativeRect","topLayer","isOffsetParentAnElement","offsetRect","htmlOffset","getClientRects","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","getOffsetParent","svgOffsetParent","getElementRects","getOffsetParentFn","getDimensionsFn","floatingDimensions","isRTL","rectsAreEqual","observeMove","onMove","io","timeoutId","root","cleanup","_io","refresh","skip","threshold","elementRectForRootMargin","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","offset$1","shift$1","flip$1","size$1","hide$1","arrow$1","limitShift$1","mergedOptions","platformWithCache","computePosition$1","useLayoutEffect","useEffect","deepEqual","keys","key","getDPR","roundByDPR","dpr","useLatestRef","useFloating","externalReference","externalFloating","transform","whileElementsMounted","open","setData","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","React.useCallback","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","openRef","fullData","isMountedRef","ReactDOM.flushSync","refs","React.useMemo","floatingStyles","initialStyles","isRef","arrow$2","deps","NAME","Arrow","children","arrowProps","Root","POPPER_NAME","createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","__scopePopper","anchor","setAnchor","ANCHOR_NAME","PopperAnchor","virtualRef","anchorProps","CONTENT_NAME","PopperContentProvider","useContentContext","PopperContent","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","setArrow","arrowSize","useSize","arrowWidth","arrowHeight","desiredPlacement","collisionPadding","hasExplicitBoundaries","isNotNull","isPositioned","args","anchorWidth","anchorHeight","contentStyle","floatingUIarrow","transformOrigin","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","arrowX","_a","arrowY","_b","cannotCenterArrow","_c","contentZIndex","setContentZIndex","_d","_e","_f","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","contentContext","baseSide","ArrowPrimitive.Root","isArrowHidden","noArrowAlign","arrowXCenter","arrowYCenter","Root2","Anchor","Content"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}