{"version":3,"file":"TaskCategoryAccordion.stories-C-OMASKZ.js","sources":["../../components/ui/TaskCategoryAccordion.tsx","../../components/stories/TaskCategoryAccordion.stories.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface TaskCategoryAccordionProps {\r\n  title: string;\r\n  children: React.ReactNode;\r\n  isOpen: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nexport const TaskCategoryAccordion: React.FC<TaskCategoryAccordionProps> = ({\r\n  title,\r\n  children,\r\n  isOpen,\r\n  onToggle,\r\n}) => (\r\n  <div className=\"border rounded mb-2\">\r\n    <button\r\n      className=\"w-full flex justify-between items-center px-4 py-2 bg-gray-100 hover:bg-gray-200 focus:outline-none\"\r\n      onClick={onToggle}\r\n      aria-expanded={isOpen}\r\n    >\r\n      <span>{title}</span>\r\n      <span>{isOpen ? \"▲\" : \"▼\"}</span>\r\n    </button>\r\n    {isOpen && <div className=\"p-4\">{children}</div>}\r\n  </div>\r\n); ","import React, { useState } from \"react\";\r\nimport { TaskCategoryAccordion } from \"../ui/TaskCategoryAccordion\";\r\nimport type { Meta, StoryObj } from \"@storybook/react\";\r\n\r\nconst mockCategory = {\r\n  category: \"Работа с текстом\",\r\n  items: [\r\n    { id: \"1\", title: \"№1. Средства связи предложений в тексте\" },\r\n    { id: \"2\", title: \"№2. Определение темы и главной мысли текста\" },\r\n  ],\r\n};\r\n\r\nconst meta: Meta<typeof TaskCategoryAccordion> = {\r\n  title: \"Blocks/TaskCategoryAccordion\",\r\n  component: TaskCategoryAccordion,\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<typeof TaskCategoryAccordion>;\r\n\r\nexport const Default: Story = {\r\n  render: () => {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    \r\n    return (\r\n      <TaskCategoryAccordion\r\n        title={mockCategory.category}\r\n        isOpen={isOpen}\r\n        onToggle={() => setIsOpen(prev => !prev)}\r\n      >\r\n        <div className=\"space-y-2 sm:space-y-3\">\r\n          {mockCategory.items.map((item) => (\r\n            <div key={item.id} className=\"bg-white rounded shadow p-3 text-sm text-gray-800\">\r\n              {item.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </TaskCategoryAccordion>\r\n    );\r\n  },\r\n}; "],"names":["TaskCategoryAccordion","title","children","isOpen","onToggle","_jsxs","category","items","id","meta","component","useState","render","setIsOpen","mockCategory","prev","parameters","Default","map","item"],"mappings":"wHASO,MAAAA,EAAA,CAAA,CAAA,MAAAC,EAAA,SAAAC,EAAA,OAAAC,EAAA,SAAAC,CAAA,IAAAC,EAAA,KAAA,MAAA,CAMD,UAAA,sBAAW,SAAA,kBACN,UAAA,sGACK,QAAAD,EACD,gBAAAD,EACM,SAAA,eAET,SAAAF,CAAC,CAAA,gBACD,SAAAE,EAAA,IAAA,GAAgB,CAAA,qBAET,UAAA,MAAW,SAAAD,CAAO,CAAA,EAEnC,CAAA,iZCrBAI,MAAAA,EAA4B,CAC5BC,SACE,mBAAEC,MAAO,CAAEP,CAAAA,GAAO,IAAAA,MAAA,yCAAA,EAClB,CAAAO,GAAA,IAAAP,MAAA,6CAAA,CAAA,CAAWA,EAEdQ,EAAA,CAEDR,qCACEA,UAAqCD,CACrCU,IAS8BC,CAE5BC,OAAAA,IACG,CAKP,KAAY,CAAAT,EAAUU,kBAGtB,aACAb,EACa,CACL,MAAMc,EAAAR,SACN,OAAAH,EAEN,SAAA,IAAAU,EAAAE,GAAA,CAAAA,CAAA,EACAC,eAAA,MAAA,CAAA,UAAA,kCAAAC,EAAAV,MAAAW,IAAAC,SAAA,MAAA,CAAA,UAAA,6DAAAH,EAAAf,KAAAA,EAAAkB,EAAAX,EAAA,CAAA;;;;;;;;;;;"}