{"version":3,"file":"task-category-selector-CyPtx4Pg.js","sources":["../../components/ui/task-category-selector.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ChevronDown, ChevronUp, X } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\n\n// Определяем категории для каждого номера задания\nconst TASK_CATEGORIES: { [key: string]: string[] } = {\n  \"1\": [\"Предлоги\", \"Союзы\", \"Частицы\", \"Местоимения\", \"Наречия\", \"Вводные слова\"],\n  \"6\": [\"Исключить\", \"Заменить\"],\n  \"21\": [\"Запятая\", \"Тире\", \"Двоеточие\"],\n  \"25\": [\"Синонимы\", \"Антонимы\", \"Фразеологизмы\", \"Слово\"]\n};\n\ninterface TaskCategorySelectorProps {\n  taskNumber: string;\n  selectedCategories: string[];\n  onCategoriesChange: (categories: string[]) => void;\n}\n\nexport function TaskCategorySelector({ \n  taskNumber, \n  selectedCategories, \n  onCategoriesChange \n}: TaskCategorySelectorProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const categories = TASK_CATEGORIES[taskNumber] || [];\n\n  // Если для данного номера задания нет категорий, не рендерим компонент\n  if (!categories.length) return null;\n\n  // Форматирование текста выбранных категорий\n  const formatSelectedText = (selected: string[]): string => {\n    if (selected.length === 0) return \"Все категории\";\n    if (selected.length === 1) return selected[0];\n    if (selected.length === 2) return `${selected[0]} и ${selected[1]}`;\n    \n    const lastItem = selected[selected.length - 1];\n    const otherItems = selected.slice(0, -1).join(\", \");\n    return `${otherItems} и ${lastItem}`;\n  };\n\n  // Обработчик выбора категории\n  const handleCategoryToggle = (category: string) => {\n    const newSelected = selectedCategories.includes(category)\n      ? selectedCategories.filter(c => c !== category)\n      : [...selectedCategories, category];\n    \n    onCategoriesChange(newSelected.length === 0 ? [...categories] : newSelected);\n  };\n\n  // Определяем, является ли устройство мобильным\n  const isMobile = typeof window !== 'undefined' && window.matchMedia('(max-width: 768px)').matches;\n\n  return (\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\n      <PopoverTrigger asChild>\n        <Badge\n          variant=\"outline\"\n          className=\"cursor-pointer py-1 px-3 flex items-center gap-1.5 hover:bg-gray-100 transition-colors\"\n        >\n          <span className=\"text-xs\">\n            {formatSelectedText(selectedCategories.length === 0 ? categories : selectedCategories)}\n          </span>\n          {isOpen ? (\n            <ChevronUp className=\"h-3 w-3 flex-shrink-0\" />\n          ) : (\n            <ChevronDown className=\"h-3 w-3 flex-shrink-0\" />\n          )}\n        </Badge>\n      </PopoverTrigger>\n      <PopoverContent \n        className=\"w-auto p-2 sm:min-w-[200px]\" \n        onOpenAutoFocus={(e) => e.preventDefault()}\n        onCloseAutoFocus={(e) => e.preventDefault()}\n      >\n        <div className=\"space-y-2\">\n          {/* Заголовок на мобильных устройствах */}\n          {isMobile && (\n            <div className=\"flex items-center justify-between pb-2 border-b\">\n              <span className=\"text-sm font-medium\">Выберите категории</span>\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"p-1 hover:bg-gray-100 rounded-full\"\n              >\n                <X className=\"h-4 w-4\" />\n              </button>\n            </div>\n          )}\n          \n          {/* Подсказка */}\n          <div className=\"text-xs text-gray-500 mb-2\">\n            {isMobile ? \n              \"Нажмите на категории для выбора\" :\n              \"ESC или клик вне меню для закрытия\"\n            }\n          </div>\n\n          {/* Категории */}\n          <div className=\"flex flex-col gap-1\">\n            {categories.map((category) => (\n              <Badge\n                key={category}\n                variant={selectedCategories.includes(category) ? \"default\" : \"outline\"}\n                className={`cursor-pointer transition-colors text-xs px-2 py-1.5 ${\n                  selectedCategories.includes(category)\n                    ? \"bg-teal-600 hover:bg-teal-700 text-white border-teal-600\"\n                    : \"border-gray-300 text-gray-700 hover:bg-gray-100\"\n                } ${isMobile ? \"py-2\" : \"\"}`} // Увеличиваем область касания на мобильных\n                onClick={() => handleCategoryToggle(category)}\n              >\n                {category}\n              </Badge>\n            ))}\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n} "],"names":["TASK_CATEGORIES","TaskCategorySelector","taskNumber","selectedCategories","onCategoriesChange","isOpen","setIsOpen","useState","categories","formatSelectedText","selected","lastItem","handleCategoryToggle","category","newSelected","c","_jsxs","Popover","Badge","_jsx","ChevronDown"],"mappings":"0OAMA,MAAAA,EAAA,CAAwB,EAAA,CACjB,WAAC,QAAY,UAAS,cAAW,UAAe,eAAW,EAAgB,EAAA,CAC3E,YAAC,UAAa,EAAW,GAAA,CACxB,UAAC,OAAW,WAAQ,EAAY,GAAA,CAChC,WAAC,WAAY,gBAAY,OAAiB,CAClD,EAQO,SAAAC,EAAA,CAAA,WAAAC,EAAA,mBAAAC,EAAA,mBAAAC,CAAA,EAAA,CAKL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,SAAA,EAAA,EACAC,EAAAR,EAAAE,CAAA,GAAA,CAAA,EAGA,GAAA,CAAAM,EAAA,OAAA,OAAA,KAGA,MAAAC,EAAAC,GAAA,CACE,GAAAA,EAAA,SAAA,EAAA,MAAA,gBACA,GAAAA,EAAA,SAAA,EAAA,OAAAA,EAAA,CAAA,EACA,GAAAA,EAAA,SAAA,EAAA,MAAA,GAAAA,EAAA,CAAA,CAAA,MAAAA,EAAA,CAAA,CAAA,GAEA,MAAAC,EAAAD,EAAAA,EAAA,OAAA,CAAA,EAEA,MAAA,GADAA,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,IAAA,CACA,MAAAC,CAAA,EAAkC,EAIpCC,EAAAC,GAAA,CACE,MAAAC,EAAAX,EAAA,SAAAU,CAAA,EAAAV,EAAA,OAAAY,GAAAA,IAAAF,CAAA,EAAA,CAEI,GAAAV,EAAIU,CAAoB,EAE5BT,EAAAU,EAAA,SAAA,EAAA,CAA8C,GAAAN,CAAI,EAAAM,CAAA,CAAyB,EAM7E,OAAAE,EAAAA,KAAAC,EAAA,CACU,KAAAZ,EAAO,aAAAC,EAAsB,SAAA,UACpB,QAAA,GAAQ,SAAAU,EAAA,KAAAE,EAAA,CAChB,QAAA,UACK,UAAA,yFACE,SAAA,eAEL,UAAA,UAAW,SAAAT,EAAAN,EAAA,SAAA,EAAAK,EAAAL,CAAA,CACuE,CAAA,aAG3E,UAAA,uBAAW,CAAA,EAAAgB,EAAA,IAAAC,EAAA,CAET,UAAA,uBAAW,CAAA,gBAId,UAAA,8BACH,gBAAA,GAAA,EAAA,eAAA,EAC+B,iBAAA,GAAA,EAAA,eAAA,EACC,SAAAJ,EAAA,KAAA,MAAA,CAEtC,UAAA,YAAW,SAAA,CAxBrB,gBAuCY,UAAA,6BAAW,SAAA,oCAGX,CAAA,eAKA,UAAA,sBAAW,SAAAR,EAAA,IAAAK,GAAAM,EAAAA,IAAAD,EAAA,CAEN,QAAAf,EAAA,SAAAU,CAAA,EAAA,UAAA,UAE0D,UAAA,wDAAAV,EAAA,SAAAU,CAAA,EAAA,2DAAA,iDAAA,IAKnC,QAAA,IAAAD,EAAAC,CAAA,EACkB,SAAAA,CAE3C,EAAAA,CAAA,CAAA,CATY,CAAA,SAiB7B"}